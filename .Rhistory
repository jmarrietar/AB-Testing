install.packages("KernSmooth")
require("KernSmooth")
require(KernSmooth)
load(KernSmooth)
library(KernSmooth)
library (KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
library(data.table)
library(KernSmooth)
require("XML")
library(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth
library(data.table)
library(KernSmooth)
setwd("C:\Users\Alfonso\Desktop\JOM\AB-Testing")
setwd("C:/Users/Alfonso/Desktop/JOM/AB-Testing")
Abandoned_Data<-read.csv("Abandoned_Data_Seed.csv",header=TRUE)
View(Abandoned_Data)
Reservation_Data<-read.csv("Reservation_Data_Seed.csv",header=T)
View(Reservation_Data)
length(which(Reservation_Data$Test_Contro=='test'))
View(Abandoned_Data)
Clientes_matches<-Abandoned_Data$Caller_ID %in% Reservation_Data$Caller_ID
Clientes_matches
View(Reservation_Data)
View(Abandoned_Data)
Abandoned_Data[Clientes_matches]
Abandoned_Data[!Clientes_matches]
Abandoned_Data$Caller_ID[Clientes_matches]
Abandoned_Data$Caller_ID[!Clientes_matches]
Email_matches<-Abandoned_Data$Email %in% Reservation_Data$Email
Zipcode_matches<-Abandoned_Data$Zipcode %in% Reservation_Data$Zipcode
Email_matches
Zipcode_matches
length(Email_matches)
zipcode_matches(Zipcode_matches)
Zipcode_matches<-Abandoned_Data$Zipcode %in% Reservation_Data$Zipcode
zipcode_matches(Zipcode_matches)
length(Zipcode_matches)
help duplicated
help(duplicated)
duplicates<-duplicated(Reservation_Data$Email)
duplicates
df <- read.table(header=T, text='
label value
A     4
B     3
C     6
B     3
B     1
A     2
A     4
A     4
')
duplicated(df)
df[duplicated(df),]
unique(df[duplicated(df),])
unique(df)
df)
(df)
unique(df)
df[!duplicated(df),]
Reservation_Data[!duplicated(Reservation_Data),]
Reservation_Data_Clean<-Reservation_Data[!duplicated(Reservation_Data),]
View(Reservation_Data_Clean)
Reservation_Data_Clean<-Reservation_Data[!duplicated(Reservation_Data$Email),]
View(Reservation_Data_Clean)
conversion_data<-read.csv('landing_page_data.csv',header=TRUE)
b_obs<-conversion_data$b
View(conversion_data)
conversion_data$b
Abandoned_Data_Data_Clean<-Abandoned_Data[!duplicated(Abandoned_Data$Email),]
Reservation_Data_Clean<-Reservation_Data[!duplicated(Reservation_Data$Email),]
Abandoned_Data_Clean<-Abandoned_Data[!duplicated(Abandoned_Data$Email),]
Reservation_Data_Clean<-Reservation_Data[!duplicated(Reservation_Data$Email),]
View(Abandoned_Data_Clean)
length(Email_matches)
Email_matches<-Abandoned_Data_Clean$Email %in% Reservation_Data_Clean$Email
Zipcode_matches<-Abandoned_Data_Clean$Zipcode %in% Reservation_Data_Clean$Zipcode
Email_matches
length(Email_matches)
length(Zipcode_matches)
Email_matches<-Abandoned_Data_Clean$Email %in% Reservation_Data_Clean$Email
length(Email_matches)
